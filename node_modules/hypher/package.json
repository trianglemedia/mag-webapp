{
  "name": "hypher",
  "version": "0.2.1",
  "description": "A fast and small hyphenation engine",
  "author": {
    "name": "Bram Stein",
    "email": "b.l.stein@gmail.com",
    "url": "http://www.bramstein.com"
  },
  "devDependencies": {
    "vows": ">=0.5.6",
    "microtime": "=0.1.3",
    "benchmark": "=0.1.347"
  },
  "directories": {
    "lib": "./lib"
  },
  "scripts": {
    "test": "vows"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/bramstein/Hypher.git"
  },
  "keywords": [
    "hyphenation",
    "hypher",
    "hypher.js",
    "ender",
    "jquery"
  ],
  "main": "./lib/hypher.js",
  "ender": "./lib/ender.js",
  "readme": "## Hypher\n\nA small and fast JavaScript hyphenation engine. Can be used in Node.js and as a jQuery plugin.\n\n## Node.js\nHypher can be installed from NPM:\n\n    npm install hypher hyphenation.en-us\n\nYou can then use it in your program by creating an instance of `Hypher` and giving it a language object:\n\n    var Hypher = require('hypher'),\n        english = require('hyphenation.en-us'),\n        h = new Hypher(english);\n\n    // returns ['hy', 'phen', 'ation']\n    h.hyphenate('hyphenation');\n\nSee `examples/node/` for a full example on how to use Hypher. The `hyphenate` method does not support hyphenated compound words. These should be split into individual words before being passed to the hyphenation engine and reassembled afterwards by the caller. You can also use the `hyphenateText` method to hyphenate a string of text. The `hyphenateText` method *does* support compound words and returns a string with inserted soft hyphens (`\\u00AD`.)\n\n    // returns 'Hy|phen|ation is use|ful when cen|ter jus|ti|fy|ing a text.' where `|` is a soft hyphen\n    h.hyphenateText('Hyphenation is useful when center justifying a text.');\n\nThe `hyphenateText` method takes an optional second parameter `minLength` which is the minimum length a word should have to be considerd for hyphenation (defaults to 4.) Note that an instance of the `Hypher` class should only be created once for each language object.\n\nThe language object should contain:\n\n    {\n      // The minimum number of unhyphenated characters at the left of each word. (required)\n      leftmin: <number>, \n\n      // The minimum number of unhyphenated characters at the right of each word. (required)\n      rightmin: <number>,\n\n      // A comma separated list of hyphenation exceptions. Custom hyphenations\n      // can be specified using '\\u2027' (hyphenation point) as hyphenation\n      // character. List items are case-insensitive. (Optional)\n      exceptions: <string>,\n\n      // A patterns object (required)\n      patterns: {}\n    }\n\nLanguage patterns can be found in the [patterns repository](https://github.com/bramstein/hyphenation-patterns).\n\n##jQuery\n\nTo use the jQuery plugin include `dist/jquery.hypher.js` in your HTML document together with any number of language pattern files from the `dist/browser` directory in the [patterns repository](https://github.com/bramstein/hyphenation-patterns). It is important that you include `jquery.hypher.js` before any language pattern files.\n\n    <script src=\"jquery.hypher.js\"></script>\n    <script src=\"en-us.js\"></script>\n\nThis will extend jQuery with a `hyphenate` method. Given the following HTML:\n\n    <p>Hyphenation is <em>important</em></p>\n\nYou can hyphenate the text content of the `p` element like so:\n\n    $('p').hyphenate('en-us');\n\nThe `hyphenate` method only works on the text content of the elements it is called on, so in the above example the word \"important\" will not be hyphenated. To also include the text content of the `em` element, simply include it in your selector:\n\n    $('p, em').hyphenate('en-us');\n\nThis naturally also applies to your own classes:\n\n    $('p.hyphenate, em, a').hyphenate('en-us');\n\nThis will hyphenate only `p` with class `hyphenate` and `em` and `a` elements.\n\n## Ender\n\nAssuming you have [Ender](http://ender.no.de/) installed you can either add Hypher and a hyphenation pattern to your library by using the command line `ender build hypher hyphenation.en-us`, or include them in your dependencies in your `package.json`:\n\n    \"dependencies\": {\n      \"hypher\": \"*\",\n      \"hyphenation.en-us\": \"*\"\n    }\n\nand build your library as usual with `ender build .`. Then---as in jQuery---hyphenate the selected elements:\n\n    $('p').hyphenate('en-us');\n\nThe `examples/ender/` directory contains an example project using Ender and Hypher.\n\n## License\nHypher is licensed under the three clause BSD license (see BSD.txt.)\n\n## See also\n* [Hyphenation patterns for use with Hypher](https://github.com/bramstein/hyphenation-patterns)\n* [Hyphenator.js](http://code.google.com/p/hyphenator/)\n\n## Contributors\n\n* Laurens Meurs - improvements to the exception list\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/bramstein/Hypher/issues"
  },
  "homepage": "https://github.com/bramstein/Hypher",
  "_id": "hypher@0.2.1",
  "_shasum": "389197db9ffcead5ef04fb81309936e0db9149c8",
  "_from": "hypher@",
  "_resolved": "https://registry.npmjs.org/hypher/-/hypher-0.2.1.tgz"
}
