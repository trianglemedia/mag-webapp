#!/usr/bin/env node

var program = require('commander');
var fs = require('fs');
var async = require('async');
var zopfli = require('../lib/zopfli');

program
  .version('1.0.3')
  .usage('[options] [files...]')
  .option('--deflate', 'raw deflate (without container)')
  .option('--zlib', 'deflate using zlib container')
  .option('--gzip', 'deflate using gzip container')
  .option('-e, --ext <s>', 'overwrite default file extension')
  .option('-i, --iterations <n>', 'number of iterations (higher = smaller = slower)')
  .option('-v, --verbose', 'Verbose')
  .parse(process.argv);

var options = {
  verbose: false,
  verbose_more: false,
  numiterations: 15,
  blocksplitting: true,
  blocksplittinglast: false,
  blocksplittingmax: 15
};

if(program.iterations) options.numiterations = parseInt(program.iterations);
if(program.verbose) options.verbose = program.verbose;

var method = zopfli.createGzip, extension = 'gz';
if (program.deflate) method = zopfli.createDeflate, extension = 'zlib';
if (program.zlib) method = zopfli.createZlib, extension = 'deflate';
if (program.ext) extension = program.ext;

if(program.args.length == 0) {
  program.help();
} else {
  async.eachSeries(
    program.args,
    function(item, next) {
      fs.createReadStream(item)
        .on('error', next)
        .pipe(new method(options))
        .on('error', next)
        .pipe(fs.createWriteStream(item + '.' + extension))
        .on('error', next)
        .on('finish', function() {
          next();
        })
    },
    function(err) {
      if(err) throw err;
    }
  );
}
